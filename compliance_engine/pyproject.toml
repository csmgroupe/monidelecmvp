[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nfc-15-100-compliance-engine"
version = "0.1.0"
description = "NF C 15-100 electrical installation validation microservice using FastAPI and SHACL"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Compliance Engine Team"}
]
keywords = ["nfc-15-100", "electrical", "compliance", "shacl", "validation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "rdflib>=7.0.0",
    "pyshacl>=0.25.0",
    "jsonschema>=4.20.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.1",
    "httpx>=0.25.2",
    "requests>=2.31.0",
    "pytest>=8.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "requests>=2.31.0",
    "black>=23.0.0",
    "isort>=5.12.0", 
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/example/nfc-15-100-compliance-engine"
Documentation = "https://github.com/example/nfc-15-100-compliance-engine#readme"
Repository = "https://github.com/example/nfc-15-100-compliance-engine.git"
"Bug Tracker" = "https://github.com/example/nfc-15-100-compliance-engine/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/compliance_engine"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
asyncio_mode = "auto" 
